!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a3c87ab5/
0	src/PinneRobot/.vscode/c_cpp_properties.json	/^                "${workspaceFolder}\/**",$/;"	s	array:configurations.0.includePath
0	src/PinneRobot/.vscode/c_cpp_properties.json	/^                "${workspaceFolder}\/**",$/;"	s	array:configurations.1.includePath
0	src/PinneRobot/.vscode/c_cpp_properties.json	/^                "_DEBUG",$/;"	s	array:configurations.0.defines
0	src/PinneRobot/.vscode/c_cpp_properties.json	/^                "_DEBUG",$/;"	s	array:configurations.1.defines
0	src/PinneRobot/.vscode/c_cpp_properties.json	/^        {$/;"	o	array:configurations
1	src/PinneRobot/.vscode/c_cpp_properties.json	/^                "${workspaceFolder}"$/;"	s	array:configurations.0.includePath
1	src/PinneRobot/.vscode/c_cpp_properties.json	/^                "${workspaceFolder}"$/;"	s	array:configurations.1.includePath
1	src/PinneRobot/.vscode/c_cpp_properties.json	/^                "UNICODE",$/;"	s	array:configurations.0.defines
1	src/PinneRobot/.vscode/c_cpp_properties.json	/^                "UNICODE",$/;"	s	array:configurations.1.defines
1	src/PinneRobot/.vscode/c_cpp_properties.json	/^        {$/;"	o	array:configurations
2	src/PinneRobot/.vscode/c_cpp_properties.json	/^                "_UNICODE"$/;"	s	array:configurations.0.defines
2	src/PinneRobot/.vscode/c_cpp_properties.json	/^                "_UNICODE"$/;"	s	array:configurations.1.defines
ADDRESS_GLOBAL	src/PinneRobot/PinneAPI.h	/^	ADDRESS_GLOBAL = 0x30,$/;"	e	enum:address_t
ADDRESS_LEFT	src/PinneRobot/PinneAPI.h	/^	ADDRESS_LEFT = 0x00,$/;"	e	enum:address_t
ADDRESS_RIGHT	src/PinneRobot/PinneAPI.h	/^	ADDRESS_RIGHT = 0x10,$/;"	e	enum:address_t
ADDRESS_ROTATION	src/PinneRobot/PinneAPI.h	/^	ADDRESS_ROTATION = 0x20,$/;"	e	enum:address_t
ADDRESS_UNKNOWN	src/PinneRobot/PinneAPI.h	/^	ADDRESS_UNKNOWN$/;"	e	enum:address_t
BLOCKED_BY_ABS_MIN_POSITION	src/PinneRobot/PinneAPI.h	/^	BLOCKED_BY_ABS_MIN_POSITION,\/\/$/;"	e	enum:stateChange_t
BLOCKED_BY_MAX_POSITION	src/PinneRobot/PinneAPI.h	/^	BLOCKED_BY_MAX_POSITION,\/\/Position counter is above range$/;"	e	enum:stateChange_t
BLOCKED_BY_MIN_POSITION	src/PinneRobot/PinneAPI.h	/^	BLOCKED_BY_MIN_POSITION,\/\/Position counter is below range$/;"	e	enum:stateChange_t
BLOCKED_BY_SLACK_SENSOR	src/PinneRobot/PinneAPI.h	/^	BLOCKED_BY_SLACK_SENSOR,$/;"	e	enum:stateChange_t
BLOCKED_BY_TOP_SENSOR	src/PinneRobot/PinneAPI.h	/^	BLOCKED_BY_TOP_SENSOR,\/\/The stop sensor was hit$/;"	e	enum:stateChange_t
BRAKE_FULL	src/PinneRobot/MotorDriver.h	/^		const static speed_t BRAKE_FULL;$/;"	m	class:VNH5019Driver	typeref:typename:const speed_t
BRAKE_FULL	src/PinneRobot/VNH5019Driver.cpp	/^const speed_t VNH5019Driver::BRAKE_FULL = 512;$/;"	m	class:VNH5019Driver	typeref:typename:const speed_t
BRAKE_NONE	src/PinneRobot/MotorDriver.h	/^		const static speed_t BRAKE_NONE;$/;"	m	class:VNH5019Driver	typeref:typename:const speed_t
BRAKE_NONE	src/PinneRobot/VNH5019Driver.cpp	/^const speed_t VNH5019Driver::BRAKE_NONE = 0;$/;"	m	class:VNH5019Driver	typeref:typename:const speed_t
BYTE_COMMAND	src/PinneRobot/PinneAPI.h	/^	BYTE_COMMAND = 0x80,$/;"	e	enum:byteType_t
BYTE_DATA	src/PinneRobot/PinneAPI.h	/^	BYTE_DATA = 0x00,$/;"	e	enum:byteType_t
BYTE_UNKNOWN	src/PinneRobot/PinneAPI.h	/^	BYTE_UNKNOWN$/;"	e	enum:byteType_t
CMD_BRAKE	src/PinneRobot/PinneAPI.h	/^	CMD_BRAKE = 0x05,$/;"	e	enum:command_t
CMD_CURRENT_POSITION	src/PinneRobot/PinneAPI.h	/^	CMD_CURRENT_POSITION = 0x04,$/;"	e	enum:command_t
CMD_DIRECTION	src/PinneRobot/PinneAPI.h	/^	CMD_DIRECTION = 0x02,$/;"	e	enum:command_t
CMD_ECHO_MESSAGES	src/PinneRobot/PinneAPI.h	/^	CMD_ECHO_MESSAGES = 0x0F,$/;"	e	enum:command_t
CMD_GOTO_PARKING_POSITION	src/PinneRobot/PinneAPI.h	/^	CMD_GOTO_PARKING_POSITION = 0x0A,$/;"	e	enum:command_t
CMD_GOTO_SPEED_RAMP_DOWN	src/PinneRobot/PinneAPI.h	/^	CMD_GOTO_SPEED_RAMP_DOWN = 0x0D,$/;"	e	enum:command_t
CMD_GOTO_SPEED_RAMP_UP	src/PinneRobot/PinneAPI.h	/^	CMD_GOTO_SPEED_RAMP_UP = 0x0C,$/;"	e	enum:command_t
CMD_GOTO_SPEED_SCALING	src/PinneRobot/PinneAPI.h	/^	CMD_GOTO_SPEED_SCALING = 0x0E,$/;"	e	enum:command_t
CMD_GOTO_TARGET	src/PinneRobot/PinneAPI.h	/^	CMD_GOTO_TARGET = 0x0B, \/\/duration after halfway point as argument$/;"	e	enum:command_t
CMD_INFO	src/PinneRobot/PinneAPI.h	/^	CMD_INFO = 0x07,\/\/used for debugging, arbitrary numboer of asci characters$/;"	e	enum:command_t
CMD_MAX_POSITION	src/PinneRobot/PinneAPI.h	/^	CMD_MAX_POSITION = 0x09,$/;"	e	enum:command_t
CMD_MIN_POSITION	src/PinneRobot/PinneAPI.h	/^	CMD_MIN_POSITION = 0x08,$/;"	e	enum:command_t
CMD_SPEED	src/PinneRobot/PinneAPI.h	/^	CMD_SPEED = 0x01,$/;"	e	enum:command_t
CMD_STATE_CHANGE	src/PinneRobot/PinneAPI.h	/^	CMD_STATE_CHANGE = 0x06,$/;"	e	enum:command_t
CMD_STOP	src/PinneRobot/PinneAPI.h	/^	CMD_STOP = 0x00,\/\/speed fade out time as argument$/;"	e	enum:command_t
CMD_TARGET_POSITION	src/PinneRobot/PinneAPI.h	/^	CMD_TARGET_POSITION = 0x03,$/;"	e	enum:command_t
CMD_UNKNOWN	src/PinneRobot/PinneAPI.h	/^	CMD_UNKNOWN$/;"	e	enum:command_t
Calculate	src/PinneRobot/SpeedRamping.cpp	/^boolean SpeedRamping::Calculate(int currPosition)$/;"	f	class:SpeedRamping	typeref:typename:boolean
DEBUG	src/PinneRobot/PinneAPI.h	/^#define DEBUG$/;"	d
DEBUG_NL	src/PinneRobot/PinneAPI.h	/^#define DEBUG_NL$/;"	d
DEBUG_PRINT	src/PinneRobot/PinneAPI.h	/^#define DEBUG_PRINT(/;"	d
DEFAULT_CALC_INTERVAL	src/PinneRobot/SpeedRamping.cpp	/^const unsigned long SpeedRamping::DEFAULT_CALC_INTERVAL = 50;$/;"	m	class:SpeedRamping	typeref:typename:const unsigned long
DEFAULT_CALC_INTERVAL	src/PinneRobot/SpeedRamping.h	/^	const static unsigned long DEFAULT_CALC_INTERVAL;$/;"	m	class:SpeedRamping	typeref:typename:const unsigned long
DEFAULT_RAMP_TIME	src/PinneRobot/SpeedRamping.cpp	/^#define DEFAULT_RAMP_TIME /;"	d	file:
DIRECTION_DOWN	src/PinneRobot/Motor.h	/^		const static int DIRECTION_DOWN;$/;"	m	class:PinneMotor	typeref:typename:const int
DIRECTION_DOWN	src/PinneRobot/Motor.h	/^		const static int DIRECTION_DOWN;$/;"	m	class:RotationMotor	typeref:typename:const int
DIRECTION_DOWN	src/PinneRobot/PinneMotor.cpp	/^const int PinneMotor::DIRECTION_DOWN = 0;$/;"	m	class:PinneMotor	typeref:typename:const int
DIRECTION_DOWN	src/PinneRobot/RotationMotor.cpp	/^const int RotationMotor::DIRECTION_DOWN = 0;\/\/turning right$/;"	m	class:RotationMotor	typeref:typename:const int
DIRECTION_DOWN_INCREMENT	src/PinneRobot/Motor.h	/^		const static int DIRECTION_DOWN_INCREMENT;$/;"	m	class:PinneMotor	typeref:typename:const int
DIRECTION_DOWN_INCREMENT	src/PinneRobot/PinneMotor.cpp	/^const int PinneMotor::DIRECTION_DOWN_INCREMENT = 1;$/;"	m	class:PinneMotor	typeref:typename:const int
DIRECTION_LEFT	src/PinneRobot/Motor.h	/^		const static int DIRECTION_LEFT;$/;"	m	class:RotationMotor	typeref:typename:const int
DIRECTION_LEFT	src/PinneRobot/RotationMotor.cpp	/^const int RotationMotor::DIRECTION_LEFT = RotationMotor::DIRECTION_UP;$/;"	m	class:RotationMotor	typeref:typename:const int
DIRECTION_RIGHT	src/PinneRobot/Motor.h	/^		const static int DIRECTION_RIGHT;$/;"	m	class:RotationMotor	typeref:typename:const int
DIRECTION_RIGHT	src/PinneRobot/RotationMotor.cpp	/^const int RotationMotor::DIRECTION_RIGHT = RotationMotor::DIRECTION_DOWN;$/;"	m	class:RotationMotor	typeref:typename:const int
DIRECTION_UP	src/PinneRobot/Motor.h	/^		const static int DIRECTION_UP;$/;"	m	class:PinneMotor	typeref:typename:const int
DIRECTION_UP	src/PinneRobot/Motor.h	/^		const static int DIRECTION_UP;$/;"	m	class:RotationMotor	typeref:typename:const int
DIRECTION_UP	src/PinneRobot/PinneMotor.cpp	/^const int PinneMotor::DIRECTION_UP = 1;$/;"	m	class:PinneMotor	typeref:typename:const int
DIRECTION_UP	src/PinneRobot/RotationMotor.cpp	/^const int RotationMotor::DIRECTION_UP = 1;\/\/turning left$/;"	m	class:RotationMotor	typeref:typename:const int
DIRECTION_UP_INCREMENT	src/PinneRobot/Motor.h	/^		const static int DIRECTION_UP_INCREMENT;$/;"	m	class:PinneMotor	typeref:typename:const int
DIRECTION_UP_INCREMENT	src/PinneRobot/PinneMotor.cpp	/^const int PinneMotor::DIRECTION_UP_INCREMENT = -1;$/;"	m	class:PinneMotor	typeref:typename:const int
DRIVER_FAULT	src/PinneRobot/PinneAPI.h	/^	DRIVER_FAULT\/\/Something is wrong with the driver itself$/;"	e	enum:stateChange_t
DebugMessagePrint	src/PinneRobot/PinneAPI.h	/^static void DebugMessagePrint(command_t cmd, address_t addr, setGet_t setGet, int value)$/;"	f	typeref:typename:void
DebugPrint	src/PinneRobot/PinneAPI.h	/^static void DebugPrint(const char* msg)$/;"	f	typeref:typename:void
DebugPrint	src/PinneRobot/PinneAPI.h	/^static void DebugPrint(int msg)$/;"	f	typeref:typename:void
DebugUnitPrint	src/PinneRobot/PinneAPI.h	/^static void DebugUnitPrint(address_t address, const char* msg)$/;"	f	typeref:typename:void
DebugUnitPrint	src/PinneRobot/PinneAPI.h	/^static void DebugUnitPrint(address_t address, int msg)$/;"	f	typeref:typename:void
FALLING_RAMP	src/PinneRobot/SpeedRamping.h	/^		FALLING_RAMP$/;"	e	enum:SpeedRamping::__anon880d42800103
GET_MESSAGE	src/PinneRobot/PinneAPI.h	/^	GET_MESSAGE = 0x40,$/;"	e	enum:setGet_t
GOING_DOWN	src/PinneRobot/PinneAPI.h	/^	GOING_DOWN,\/\/direction set to up$/;"	e	enum:stateChange_t
GOING_TO_TARGET	src/PinneRobot/PinneAPI.h	/^	GOING_TO_TARGET,$/;"	e	enum:stateChange_t
GOING_UP	src/PinneRobot/PinneAPI.h	/^	GOING_UP,\/\/directiom set to down$/;"	e	enum:stateChange_t
GetBrake	src/PinneRobot/Motor.h	/^		int GetBrake() { return static_cast<int>(_driver->GetBrake()); };$/;"	f	class:PinneMotor	typeref:typename:int
GetBrake	src/PinneRobot/Motor.h	/^		int GetBrake() { return static_cast<int>(_driver->GetBrake()); };$/;"	f	class:RotationMotor	typeref:typename:int
GetBrake	src/PinneRobot/MotorDriver.h	/^		virtual speed_t GetBrake() { return _brake; };$/;"	f	class:MotorDriver	typeref:typename:speed_t
GetCurrentPosition	src/PinneRobot/Motor.h	/^		int GetCurrentPosition() { return static_cast<int>(_currentPosition); };$/;"	f	class:RotationMotor	typeref:typename:int
GetCurrentPosition	src/PinneRobot/PinneMotor.cpp	/^int PinneMotor::GetCurrentPosition()$/;"	f	class:PinneMotor	typeref:typename:int
GetCurrentValue	src/PinneRobot/SpeedRamping.cpp	/^int SpeedRamping::GetCurrentValue()$/;"	f	class:SpeedRamping	typeref:typename:int
GetDirection	src/PinneRobot/Motor.h	/^		int GetDirection() { return static_cast<int>(_driver->GetDirection()); };$/;"	f	class:PinneMotor	typeref:typename:int
GetDirection	src/PinneRobot/Motor.h	/^		int GetDirection() { return static_cast<int>(_driver->GetDirection()); };$/;"	f	class:RotationMotor	typeref:typename:int
GetDirection	src/PinneRobot/MotorDriver.h	/^		virtual int GetDirection() { return _direction; };$/;"	f	class:MotorDriver	typeref:typename:int
GetFault	src/PinneRobot/VNH5019Driver.cpp	/^unsigned char VNH5019Driver::GetFault()$/;"	f	class:VNH5019Driver	typeref:typename:unsigned char
GetGoToSpeedRampDown	src/PinneRobot/Motor.h	/^		int GetGoToSpeedRampDown() {return static_cast<int>(_speedRamper->GetRampDown()); };$/;"	f	class:PinneMotor	typeref:typename:int
GetGoToSpeedRampDown	src/PinneRobot/Motor.h	/^		int GetGoToSpeedRampDown() {return static_cast<int>(_speedRamper->GetRampDown()); };$/;"	f	class:RotationMotor	typeref:typename:int
GetGoToSpeedRampUp	src/PinneRobot/Motor.h	/^		int GetGoToSpeedRampUp() {return static_cast<int>(_speedRamper->GetRampUp()); };$/;"	f	class:PinneMotor	typeref:typename:int
GetGoToSpeedRampUp	src/PinneRobot/Motor.h	/^		int GetGoToSpeedRampUp() {return static_cast<int>(_speedRamper->GetRampUp()); };$/;"	f	class:RotationMotor	typeref:typename:int
GetGoToSpeedScaling	src/PinneRobot/Motor.h	/^		int GetGoToSpeedScaling() {return static_cast<int>(_speedRamper->GetSpeedScaling() * 1000); };$/;"	f	class:PinneMotor	typeref:typename:int
GetGoToSpeedScaling	src/PinneRobot/Motor.h	/^		int GetGoToSpeedScaling() {return static_cast<int>(_speedRamper->GetSpeedScaling() * 1000); };$/;"	f	class:RotationMotor	typeref:typename:int
GetMaxPosition	src/PinneRobot/Motor.h	/^		int GetMaxPosition() { return static_cast<int>(_maxPosition); };$/;"	f	class:PinneMotor	typeref:typename:int
GetMaxPosition	src/PinneRobot/Motor.h	/^		int GetMaxPosition() { return static_cast<int>(_maxPosition); };$/;"	f	class:RotationMotor	typeref:typename:int
GetMaxSpeed	src/PinneRobot/SpeedRamping.h	/^	int GetMaxSpeed() {return static_cast<int>(_maxSpeed); };$/;"	f	class:SpeedRamping	typeref:typename:int
GetMinPosition	src/PinneRobot/Motor.h	/^		int GetMinPosition() { return static_cast<int>(_minPosition); };$/;"	f	class:PinneMotor	typeref:typename:int
GetMinPosition	src/PinneRobot/Motor.h	/^		int GetMinPosition() { return static_cast<int>(_minPosition); };$/;"	f	class:RotationMotor	typeref:typename:int
GetMinSpeed	src/PinneRobot/SpeedRamping.h	/^	int GetMinSpeed() {return static_cast<int>(_minSpeed); };$/;"	f	class:SpeedRamping	typeref:typename:int
GetRampDown	src/PinneRobot/SpeedRamping.h	/^	float GetRampDown() {return _rampDown; };$/;"	f	class:SpeedRamping	typeref:typename:float
GetRampUp	src/PinneRobot/SpeedRamping.h	/^	float GetRampUp() {return _rampUp; };$/;"	f	class:SpeedRamping	typeref:typename:float
GetSpeed	src/PinneRobot/Motor.h	/^		int GetSpeed() { return static_cast<int>(_driver->GetSpeed()); };$/;"	f	class:PinneMotor	typeref:typename:int
GetSpeed	src/PinneRobot/Motor.h	/^		int GetSpeed() { return static_cast<int>(_driver->GetSpeed()); };$/;"	f	class:RotationMotor	typeref:typename:int
GetSpeed	src/PinneRobot/MotorDriver.h	/^		virtual speed_t GetSpeed() { return _speed; };$/;"	f	class:MotorDriver	typeref:typename:speed_t
GetSpeedScaling	src/PinneRobot/SpeedRamping.h	/^	float GetSpeedScaling() {return _speedScaling; };$/;"	f	class:SpeedRamping	typeref:typename:float
GetStop	src/PinneRobot/Motor.h	/^		int GetStop() {return _stoppingSpeed; };$/;"	f	class:PinneMotor	typeref:typename:int
GetStop	src/PinneRobot/Motor.h	/^		int GetStop() {return _stoppingSpeed; };$/;"	f	class:RotationMotor	typeref:typename:int
GetTargetPosition	src/PinneRobot/Motor.h	/^		int GetTargetPosition() { return static_cast<int>(_targetPosition); };$/;"	f	class:PinneMotor	typeref:typename:int
GetTargetPosition	src/PinneRobot/Motor.h	/^		int GetTargetPosition() { return static_cast<int>(_targetPosition); };$/;"	f	class:RotationMotor	typeref:typename:int
GoToParkingPosition	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::GoToParkingPosition()$/;"	f	class:PinneMotor	typeref:typename:void
GoToParkingPosition	src/PinneRobot/PinneRobot.cpp	/^void PinneRobot::GoToParkingPosition()$/;"	f	class:PinneRobot	typeref:typename:void
GoToParkingPosition	src/PinneRobot/RotationMotor.cpp	/^void RotationMotor::GoToParkingPosition()$/;"	f	class:RotationMotor	typeref:typename:void
GoToTargetPosition	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::GoToTargetPosition(int value)$/;"	f	class:PinneMotor	typeref:typename:void
GoToTargetPosition	src/PinneRobot/RotationMotor.cpp	/^void RotationMotor::GoToTargetPosition(int value)$/;"	f	class:RotationMotor	typeref:typename:void
IsBlocked	src/PinneRobot/PinneMotor.cpp	/^boolean PinneMotor::IsBlocked()$/;"	f	class:PinneMotor	typeref:typename:boolean
IsBlocked	src/PinneRobot/RotationMotor.cpp	/^boolean RotationMotor::IsBlocked()$/;"	f	class:RotationMotor	typeref:typename:boolean
L293Driver	src/PinneRobot/L293Driver.cpp	/^L293Driver::L293Driver(unsigned char INA, unsigned char INB, unsigned char PWM) :$/;"	f	class:L293Driver
L293Driver	src/PinneRobot/MotorDriver.h	/^class L293Driver: public MotorDriver$/;"	c
MOTOR_H	src/PinneRobot/Motor.h	/^#define MOTOR_H$/;"	d
MotorDriver	src/PinneRobot/MotorDriver.h	/^		MotorDriver() {};$/;"	f	class:MotorDriver
MotorDriver	src/PinneRobot/MotorDriver.h	/^class MotorDriver$/;"	c
MotorDriver_h	src/PinneRobot/MotorDriver.h	/^#define MotorDriver_h$/;"	d
NotifyStateChange	src/PinneRobot/PinneAPI.h	/^static void NotifyStateChange(stateChange_t stateChange, address_t address)$/;"	f	typeref:typename:void
PARSE_MASK_ADDRESS	src/PinneRobot/PinneAPI.h	/^	PARSE_MASK_ADDRESS = 0x30,\/\/which motor is address$/;"	e	enum:parseMask_t
PARSE_MASK_COMMAND	src/PinneRobot/PinneAPI.h	/^	PARSE_MASK_COMMAND = 0x0F,$/;"	e	enum:parseMask_t
PARSE_MASK_MESSAGE_TYPE	src/PinneRobot/PinneAPI.h	/^	PARSE_MASK_MESSAGE_TYPE = 0x80,\/\/command byte of data byte$/;"	e	enum:parseMask_t
PARSE_MASK_SETGET	src/PinneRobot/PinneAPI.h	/^	PARSE_MASK_SETGET = 0x40,\/\/setter or getter$/;"	e	enum:parseMask_t
PARSE_MASK_UNKNOWN	src/PinneRobot/PinneAPI.h	/^	PARSE_MASK_UNKNOWN$/;"	e	enum:parseMask_t
PINNE_API_H	src/PinneRobot/PinneAPI.h	/^#define PINNE_API_H$/;"	d
PINNE_API_PARSER_H	src/PinneRobot/PinneAPIParser.h	/^#define PINNE_API_PARSER_H$/;"	d
PINNE_ROBOT_H	src/PinneRobot/PinneRobot.h	/^#define PINNE_ROBOT_H$/;"	d
POSITION_ALL_UP	src/PinneRobot/Motor.h	/^		const static int POSITION_ALL_UP;$/;"	m	class:PinneMotor	typeref:typename:const int
POSITION_ALL_UP	src/PinneRobot/PinneMotor.cpp	/^const int PinneMotor::POSITION_ALL_UP = 1;$/;"	m	class:PinneMotor	typeref:typename:const int
POSITION_DEFAULT	src/PinneRobot/Motor.h	/^		const static int POSITION_DEFAULT;$/;"	m	class:RotationMotor	typeref:typename:const int
POSITION_DEFAULT	src/PinneRobot/RotationMotor.cpp	/^const int RotationMotor::POSITION_DEFAULT = 512;$/;"	m	class:RotationMotor	typeref:typename:const int
POSITION_DEFAULT_MAX	src/PinneRobot/Motor.h	/^		const static int POSITION_DEFAULT_MAX;$/;"	m	class:PinneMotor	typeref:typename:const int
POSITION_DEFAULT_MAX	src/PinneRobot/PinneMotor.cpp	/^const int PinneMotor::POSITION_DEFAULT_MAX = 4096;$/;"	m	class:PinneMotor	typeref:typename:const int
POSITION_LEFT_LIMIT	src/PinneRobot/Motor.h	/^		const static int POSITION_LEFT_LIMIT;$/;"	m	class:RotationMotor	typeref:typename:const int
POSITION_LEFT_LIMIT	src/PinneRobot/RotationMotor.cpp	/^const int RotationMotor::POSITION_LEFT_LIMIT = RotationMotor::POSITION_MIN;\/\/max left$/;"	m	class:RotationMotor	typeref:typename:const int
POSITION_MAX	src/PinneRobot/Motor.h	/^		const static int POSITION_MAX;$/;"	m	class:RotationMotor	typeref:typename:const int
POSITION_MAX	src/PinneRobot/RotationMotor.cpp	/^const int RotationMotor::POSITION_MAX = 800;\/\/max right$/;"	m	class:RotationMotor	typeref:typename:const int
POSITION_MIN	src/PinneRobot/Motor.h	/^		const static int POSITION_MIN;$/;"	m	class:RotationMotor	typeref:typename:const int
POSITION_MIN	src/PinneRobot/RotationMotor.cpp	/^const int RotationMotor::POSITION_MIN = 200;\/\/max left$/;"	m	class:RotationMotor	typeref:typename:const int
POSITION_RIGHT_LIMIT	src/PinneRobot/Motor.h	/^		const static int POSITION_RIGHT_LIMIT;$/;"	m	class:RotationMotor	typeref:typename:const int
POSITION_RIGHT_LIMIT	src/PinneRobot/RotationMotor.cpp	/^const int RotationMotor::POSITION_RIGHT_LIMIT = RotationMotor::POSITION_MAX;\/\/max right$/;"	m	class:RotationMotor	typeref:typename:const int
PinneAPIParser	src/PinneRobot/PinneAPIParser.cpp	/^PinneAPIParser::PinneAPIParser(PinneRobot *robot) : _robot(robot),$/;"	f	class:PinneAPIParser
PinneAPIParser	src/PinneRobot/PinneAPIParser.h	/^class PinneAPIParser$/;"	c
PinneMotor	src/PinneRobot/Motor.h	/^class PinneMotor$/;"	c
PinneMotor	src/PinneRobot/PinneMotor.cpp	/^PinneMotor::PinneMotor(int topStopSensorPin, int slackStopSensorPin, int encoderInterruptIndex, /;"	f	class:PinneMotor
PinneRobot	README.md	/^# PinneRobot$/;"	c
PinneRobot	src/PinneRobot/PinneRobot.cpp	/^PinneRobot::PinneRobot()$/;"	f	class:PinneRobot
PinneRobot	src/PinneRobot/PinneRobot.h	/^class PinneRobot$/;"	c
RAMP_TABLE_h	src/PinneRobot/kRISE_TABLE.h	/^#define RAMP_TABLE_h$/;"	d
RISING_RAMP	src/PinneRobot/SpeedRamping.h	/^		RISING_RAMP,$/;"	e	enum:SpeedRamping::__anon880d42800103
ReadSlackStopSensor	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::ReadSlackStopSensor()$/;"	f	class:PinneMotor	typeref:typename:void
ReadTopStopSensor	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::ReadTopStopSensor()$/;"	f	class:PinneMotor	typeref:typename:void
Reply	src/PinneRobot/PinneAPI.h	/^static void Reply(const char* str)$/;"	f	typeref:typename:void
ReturnGetValue	src/PinneRobot/PinneAPI.h	/^static void ReturnGetValue(command_t command, address_t address, int value)$/;"	f	typeref:typename:void
RotationMotor	src/PinneRobot/Motor.h	/^class RotationMotor$/;"	c
RotationMotor	src/PinneRobot/RotationMotor.cpp	/^RotationMotor::RotationMotor(unsigned char rotationPotmeterPin, L293Driver* driver, address_t ad/;"	f	class:RotationMotor
SETGET_UNKNOWN	src/PinneRobot/PinneAPI.h	/^	SETGET_UNKNOWN$/;"	e	enum:setGet_t
SET_MESSAGE	src/PinneRobot/PinneAPI.h	/^	SET_MESSAGE = 0x00,$/;"	e	enum:setGet_t
SLACK_SENSOR_IN	src/PinneRobot/Motor.h	/^		const static int SLACK_SENSOR_IN;$/;"	m	class:PinneMotor	typeref:typename:const int
SLACK_SENSOR_IN	src/PinneRobot/PinneMotor.cpp	/^const int PinneMotor::SLACK_SENSOR_IN = 0;$/;"	m	class:PinneMotor	typeref:typename:const int
SLACK_SENSOR_OUT	src/PinneRobot/Motor.h	/^		const static int SLACK_SENSOR_OUT;$/;"	m	class:PinneMotor	typeref:typename:const int
SLACK_SENSOR_OUT	src/PinneRobot/PinneMotor.cpp	/^const int PinneMotor::SLACK_SENSOR_OUT = 1;$/;"	m	class:PinneMotor	typeref:typename:const int
SPEED_MAX	src/PinneRobot/L293Driver.cpp	/^const int L293Driver::SPEED_MAX = 512;$/;"	m	class:L293Driver	typeref:typename:const int
SPEED_MAX	src/PinneRobot/MotorDriver.h	/^		const static speed_t SPEED_MAX;$/;"	m	class:VNH5019Driver	typeref:typename:const speed_t
SPEED_MAX	src/PinneRobot/MotorDriver.h	/^	 const static speed_t SPEED_MAX;$/;"	m	class:L293Driver	typeref:typename:const speed_t
SPEED_MAX	src/PinneRobot/VNH5019Driver.cpp	/^const speed_t VNH5019Driver::SPEED_MAX = 512;$/;"	m	class:VNH5019Driver	typeref:typename:const speed_t
SPEED_MIN	src/PinneRobot/L293Driver.cpp	/^const int L293Driver::SPEED_MIN = 0;$/;"	m	class:L293Driver	typeref:typename:const int
SPEED_MIN	src/PinneRobot/MotorDriver.h	/^		const static speed_t SPEED_MIN;$/;"	m	class:VNH5019Driver	typeref:typename:const speed_t
SPEED_MIN	src/PinneRobot/MotorDriver.h	/^	 const static speed_t SPEED_MIN;$/;"	m	class:L293Driver	typeref:typename:const speed_t
SPEED_MIN	src/PinneRobot/VNH5019Driver.cpp	/^const speed_t VNH5019Driver::SPEED_MIN = 0;$/;"	m	class:VNH5019Driver	typeref:typename:const speed_t
SPEED_STOP	src/PinneRobot/Motor.h	/^		const static int SPEED_STOP;$/;"	m	class:RotationMotor	typeref:typename:const int
SPEED_STOP	src/PinneRobot/MotorDriver.h	/^		const static speed_t SPEED_STOP;$/;"	m	class:VNH5019Driver	typeref:typename:const speed_t
SPEED_STOP	src/PinneRobot/RotationMotor.cpp	/^const int RotationMotor::SPEED_STOP = 0;$/;"	m	class:RotationMotor	typeref:typename:const int
SPEED_STOP	src/PinneRobot/VNH5019Driver.cpp	/^const speed_t VNH5019Driver::SPEED_STOP = 0;$/;"	m	class:VNH5019Driver	typeref:typename:const speed_t
STOPPED	src/PinneRobot/PinneAPI.h	/^	STOPPED,\/\/Stopped manually$/;"	e	enum:stateChange_t
STOPPED_AT_TARGET	src/PinneRobot/PinneAPI.h	/^	STOPPED_AT_TARGET,\/\/$/;"	e	enum:stateChange_t
SetBrake	src/PinneRobot/L293Driver.cpp	/^void L293Driver::SetBrake(speed_t brake)$/;"	f	class:L293Driver	typeref:typename:void
SetBrake	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::SetBrake(int brake)$/;"	f	class:PinneMotor	typeref:typename:void
SetBrake	src/PinneRobot/RotationMotor.cpp	/^void RotationMotor::SetBrake(int brake)$/;"	f	class:RotationMotor	typeref:typename:void
SetBrake	src/PinneRobot/VNH5019Driver.cpp	/^void VNH5019Driver::SetBrake(speed_t brake)$/;"	f	class:VNH5019Driver	typeref:typename:void
SetCurrentPosition	src/PinneRobot/Motor.h	/^		void SetCurrentPosition(int pos) {};$/;"	f	class:RotationMotor	typeref:typename:void
SetCurrentPosition	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::SetCurrentPosition(int currentPosition)$/;"	f	class:PinneMotor	typeref:typename:void
SetDirection	src/PinneRobot/L293Driver.cpp	/^void L293Driver::SetDirection(int direction)$/;"	f	class:L293Driver	typeref:typename:void
SetDirection	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::SetDirection(int direction)$/;"	f	class:PinneMotor	typeref:typename:void
SetDirection	src/PinneRobot/RotationMotor.cpp	/^void RotationMotor::SetDirection(int direction)$/;"	f	class:RotationMotor	typeref:typename:void
SetDirection	src/PinneRobot/VNH5019Driver.cpp	/^void VNH5019Driver::SetDirection(int direction)$/;"	f	class:VNH5019Driver	typeref:typename:void
SetGoToSpeedRampDown	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::SetGoToSpeedRampDown(int value)$/;"	f	class:PinneMotor	typeref:typename:void
SetGoToSpeedRampDown	src/PinneRobot/RotationMotor.cpp	/^void RotationMotor::SetGoToSpeedRampDown(int value)$/;"	f	class:RotationMotor	typeref:typename:void
SetGoToSpeedRampUp	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::SetGoToSpeedRampUp(int value)$/;"	f	class:PinneMotor	typeref:typename:void
SetGoToSpeedRampUp	src/PinneRobot/RotationMotor.cpp	/^void RotationMotor::SetGoToSpeedRampUp(int value)$/;"	f	class:RotationMotor	typeref:typename:void
SetGoToSpeedScaling	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::SetGoToSpeedScaling(int value)$/;"	f	class:PinneMotor	typeref:typename:void
SetGoToSpeedScaling	src/PinneRobot/RotationMotor.cpp	/^void RotationMotor::SetGoToSpeedScaling(int value)$/;"	f	class:RotationMotor	typeref:typename:void
SetMaxPosition	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::SetMaxPosition(int maxPosition)$/;"	f	class:PinneMotor	typeref:typename:void
SetMaxPosition	src/PinneRobot/RotationMotor.cpp	/^void RotationMotor::SetMaxPosition(int maxPosition)$/;"	f	class:RotationMotor	typeref:typename:void
SetMaxSpeed	src/PinneRobot/SpeedRamping.cpp	/^void SpeedRamping::SetMaxSpeed(int speed)$/;"	f	class:SpeedRamping	typeref:typename:void
SetMinPosition	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::SetMinPosition(int minPosition)$/;"	f	class:PinneMotor	typeref:typename:void
SetMinPosition	src/PinneRobot/RotationMotor.cpp	/^void RotationMotor::SetMinPosition(int minPosition)$/;"	f	class:RotationMotor	typeref:typename:void
SetMinSpeed	src/PinneRobot/SpeedRamping.cpp	/^void SpeedRamping::SetMinSpeed(int speed)$/;"	f	class:SpeedRamping	typeref:typename:void
SetRampDown	src/PinneRobot/SpeedRamping.cpp	/^void SpeedRamping::SetRampDown(float value)$/;"	f	class:SpeedRamping	typeref:typename:void
SetRampUp	src/PinneRobot/SpeedRamping.cpp	/^void SpeedRamping::SetRampUp(float value)$/;"	f	class:SpeedRamping	typeref:typename:void
SetSpeed	src/PinneRobot/L293Driver.cpp	/^void L293Driver::SetSpeed(speed_t speed)$/;"	f	class:L293Driver	typeref:typename:void
SetSpeed	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::SetSpeed(int speed)$/;"	f	class:PinneMotor	typeref:typename:void
SetSpeed	src/PinneRobot/RotationMotor.cpp	/^void RotationMotor::SetSpeed(int speed)$/;"	f	class:RotationMotor	typeref:typename:void
SetSpeed	src/PinneRobot/VNH5019Driver.cpp	/^void VNH5019Driver::SetSpeed(speed_t speed)$/;"	f	class:VNH5019Driver	typeref:typename:void
SetSpeedScaling	src/PinneRobot/SpeedRamping.cpp	/^void SpeedRamping::SetSpeedScaling(float speedScaling)$/;"	f	class:SpeedRamping	typeref:typename:void
SetStop	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::SetStop(int value)$/;"	f	class:PinneMotor	typeref:typename:void
SetStop	src/PinneRobot/RotationMotor.cpp	/^void RotationMotor::SetStop(int value)$/;"	f	class:RotationMotor	typeref:typename:void
SetTargetPosition	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::SetTargetPosition(int targetPosition)$/;"	f	class:PinneMotor	typeref:typename:void
SetTargetPosition	src/PinneRobot/RotationMotor.cpp	/^void RotationMotor::SetTargetPosition(int targetPosition)$/;"	f	class:RotationMotor	typeref:typename:void
SpeedRamping	src/PinneRobot/SpeedRamping.cpp	/^SpeedRamping::SpeedRamping(int minSpeed, int maxSpeed) :$/;"	f	class:SpeedRamping
SpeedRamping	src/PinneRobot/SpeedRamping.h	/^class SpeedRamping {$/;"	c
SpeedRamping_h	src/PinneRobot/SpeedRamping.h	/^#define SpeedRamping_h$/;"	d
Start	src/PinneRobot/SpeedRamping.cpp	/^void SpeedRamping::Start(int startPosition, int endPosition, int peakDuration)$/;"	f	class:SpeedRamping	typeref:typename:void
Stop	src/PinneRobot/Motor.h	/^		void Stop() { _driver->SetSpeed(SPEED_STOP); };$/;"	f	class:RotationMotor	typeref:typename:void
Stop	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::Stop()$/;"	f	class:PinneMotor	typeref:typename:void
Stop	src/PinneRobot/SpeedRamping.cpp	/^void SpeedRamping::Stop()$/;"	f	class:SpeedRamping	typeref:typename:void
TABLE_SIZE	src/PinneRobot/kRISE_TABLE.h	/^static const int TABLE_SIZE = 256;$/;"	v	typeref:typename:const int
TARGET_NONE	src/PinneRobot/Motor.h	/^		const static position_t TARGET_NONE;$/;"	m	class:PinneMotor	typeref:typename:const position_t
TARGET_NONE	src/PinneRobot/Motor.h	/^		const static position_t TARGET_NONE;$/;"	m	class:RotationMotor	typeref:typename:const position_t
TARGET_NONE	src/PinneRobot/PinneMotor.cpp	/^const int PinneMotor::TARGET_NONE = 0;$/;"	m	class:PinneMotor	typeref:typename:const int
TARGET_NONE	src/PinneRobot/RotationMotor.cpp	/^const int RotationMotor::TARGET_NONE = 0;$/;"	m	class:RotationMotor	typeref:typename:const int
TOP_SENSOR_IN	src/PinneRobot/Motor.h	/^		const static int TOP_SENSOR_IN;$/;"	m	class:PinneMotor	typeref:typename:const int
TOP_SENSOR_IN	src/PinneRobot/PinneMotor.cpp	/^const int PinneMotor::TOP_SENSOR_IN = 0;$/;"	m	class:PinneMotor	typeref:typename:const int
TOP_SENSOR_OUT	src/PinneRobot/Motor.h	/^		const static int TOP_SENSOR_OUT;$/;"	m	class:PinneMotor	typeref:typename:const int
TOP_SENSOR_OUT	src/PinneRobot/PinneMotor.cpp	/^const int PinneMotor::TOP_SENSOR_OUT = 1;$/;"	m	class:PinneMotor	typeref:typename:const int
TURNING_LEFT	src/PinneRobot/Motor.h	/^		const static int TURNING_LEFT;$/;"	m	class:RotationMotor	typeref:typename:const int
TURNING_LEFT	src/PinneRobot/RotationMotor.cpp	/^const int RotationMotor::TURNING_LEFT = GOING_UP;$/;"	m	class:RotationMotor	typeref:typename:const int
TURNING_RIGHT	src/PinneRobot/Motor.h	/^		const static int TURNING_RIGHT;$/;"	m	class:RotationMotor	typeref:typename:const int
TURNING_RIGHT	src/PinneRobot/RotationMotor.cpp	/^const int RotationMotor::TURNING_RIGHT = GOING_DOWN;$/;"	m	class:RotationMotor	typeref:typename:const int
UpdateDirection	src/PinneRobot/L293Driver.cpp	/^void L293Driver::UpdateDirection()$/;"	f	class:L293Driver	typeref:typename:void
UpdateDirection	src/PinneRobot/VNH5019Driver.cpp	/^void VNH5019Driver::UpdateDirection()$/;"	f	class:VNH5019Driver	typeref:typename:void
UpdateState	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::UpdateState()$/;"	f	class:PinneMotor	typeref:typename:void
UpdateState	src/PinneRobot/RotationMotor.cpp	/^void RotationMotor::UpdateState()$/;"	f	class:RotationMotor	typeref:typename:void
VNH5019Driver	src/PinneRobot/MotorDriver.h	/^class VNH5019Driver: public MotorDriver$/;"	c
VNH5019Driver	src/PinneRobot/VNH5019Driver.cpp	/^VNH5019Driver::VNH5019Driver(unsigned char INA, unsigned char INB, unsigned char ENDIAG,	unsigne/;"	f	class:VNH5019Driver
_AbsMinPositionReached	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::_AbsMinPositionReached()$/;"	f	class:PinneMotor	typeref:typename:void
_ENDIAG	src/PinneRobot/MotorDriver.h	/^		unsigned char _ENDIAG;$/;"	m	class:VNH5019Driver	typeref:typename:unsigned char
_GoingDown	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::_GoingDown()$/;"	f	class:PinneMotor	typeref:typename:void
_GoingToTarget	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::_GoingToTarget()$/;"	f	class:PinneMotor	typeref:typename:void
_GoingToTarget	src/PinneRobot/RotationMotor.cpp	/^void RotationMotor::_GoingToTarget()$/;"	f	class:RotationMotor	typeref:typename:void
_GoingUp	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::_GoingUp()$/;"	f	class:PinneMotor	typeref:typename:void
_INA	src/PinneRobot/MotorDriver.h	/^		unsigned char _INA;$/;"	m	class:L293Driver	typeref:typename:unsigned char
_INA	src/PinneRobot/MotorDriver.h	/^		unsigned char _INA;$/;"	m	class:VNH5019Driver	typeref:typename:unsigned char
_INB	src/PinneRobot/MotorDriver.h	/^		unsigned char _INB;$/;"	m	class:L293Driver	typeref:typename:unsigned char
_INB	src/PinneRobot/MotorDriver.h	/^		unsigned char _INB;$/;"	m	class:VNH5019Driver	typeref:typename:unsigned char
_MaxPositionReached	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::_MaxPositionReached()$/;"	f	class:PinneMotor	typeref:typename:void
_MaxPositionReached	src/PinneRobot/RotationMotor.cpp	/^void RotationMotor::_MaxPositionReached()$/;"	f	class:RotationMotor	typeref:typename:void
_MinPositionReached	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::_MinPositionReached()$/;"	f	class:PinneMotor	typeref:typename:void
_MinPositionReached	src/PinneRobot/RotationMotor.cpp	/^void RotationMotor::_MinPositionReached()$/;"	f	class:RotationMotor	typeref:typename:void
_PWM	src/PinneRobot/MotorDriver.h	/^		unsigned char _PWM;$/;"	m	class:L293Driver	typeref:typename:unsigned char
_PWM	src/PinneRobot/MotorDriver.h	/^		unsigned char _PWM;$/;"	m	class:VNH5019Driver	typeref:typename:unsigned char
_SetBlocked	src/PinneRobot/Motor.h	/^		void _SetBlocked(boolean block) {};$/;"	f	class:PinneMotor	typeref:typename:void
_SlackStopSensorIn	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::_SlackStopSensorIn()$/;"	f	class:PinneMotor	typeref:typename:void
_SlackStopSensorOut	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::_SlackStopSensorOut()$/;"	f	class:PinneMotor	typeref:typename:void
_TargetReached	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::_TargetReached()$/;"	f	class:PinneMotor	typeref:typename:void
_TargetReached	src/PinneRobot/RotationMotor.cpp	/^void RotationMotor::_TargetReached()$/;"	f	class:RotationMotor	typeref:typename:void
_TopStopSensorIn	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::_TopStopSensorIn()$/;"	f	class:PinneMotor	typeref:typename:void
_TopStopSensorOut	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::_TopStopSensorOut()$/;"	f	class:PinneMotor	typeref:typename:void
_TurningLeft	src/PinneRobot/RotationMotor.cpp	/^void RotationMotor::_TurningLeft()$/;"	f	class:RotationMotor	typeref:typename:void
_TurningRight	src/PinneRobot/RotationMotor.cpp	/^void RotationMotor::_TurningRight()$/;"	f	class:RotationMotor	typeref:typename:void
_UpdateSpeedRamp	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::_UpdateSpeedRamp()$/;"	f	class:PinneMotor	typeref:typename:void
_UpdateSpeedRamp	src/PinneRobot/RotationMotor.cpp	/^void RotationMotor::_UpdateSpeedRamp()$/;"	f	class:RotationMotor	typeref:typename:void
__anon880d42800103	src/PinneRobot/SpeedRamping.h	/^	enum {$/;"	g	class:SpeedRamping
_address	src/PinneRobot/Motor.h	/^		address_t _address;$/;"	m	class:PinneMotor	typeref:typename:address_t
_address	src/PinneRobot/Motor.h	/^		address_t _address;$/;"	m	class:RotationMotor	typeref:typename:address_t
_blocked	src/PinneRobot/Motor.h	/^		boolean _blocked;$/;"	m	class:PinneMotor	typeref:typename:boolean
_blocked	src/PinneRobot/Motor.h	/^		boolean _blocked;$/;"	m	class:RotationMotor	typeref:typename:boolean
_brake	src/PinneRobot/MotorDriver.h	/^		speed_t _brake;$/;"	m	class:MotorDriver	typeref:typename:speed_t
_calcInterval	src/PinneRobot/SpeedRamping.h	/^	unsigned long _calcInterval;$/;"	m	class:SpeedRamping	typeref:typename:unsigned long
_currentAddress	src/PinneRobot/PinneAPIParser.h	/^		address_t _currentAddress;$/;"	m	class:PinneAPIParser	typeref:typename:address_t
_currentChecksum	src/PinneRobot/PinneAPIParser.h	/^		byte _currentChecksum;$/;"	m	class:PinneAPIParser	typeref:typename:byte
_currentCommand	src/PinneRobot/PinneAPIParser.h	/^		command_t _currentCommand;$/;"	m	class:PinneAPIParser	typeref:typename:command_t
_currentFloatIndex	src/PinneRobot/SpeedRamping.h	/^	float _currentFloatIndex;$/;"	m	class:SpeedRamping	typeref:typename:float
_currentPosition	src/PinneRobot/Motor.h	/^		position_t _currentPosition;$/;"	m	class:PinneMotor	typeref:typename:position_t
_currentPosition	src/PinneRobot/Motor.h	/^		position_t _currentPosition;$/;"	m	class:RotationMotor	typeref:typename:position_t
_currentSetGet	src/PinneRobot/PinneAPIParser.h	/^		setGet_t _currentSetGet;$/;"	m	class:PinneAPIParser	typeref:typename:setGet_t
_dataByteBuffer	src/PinneRobot/PinneAPIParser.h	/^		char _dataByteBuffer[2];$/;"	m	class:PinneAPIParser	typeref:typename:char[2]
_direction	src/PinneRobot/MotorDriver.h	/^		int _direction;$/;"	m	class:MotorDriver	typeref:typename:int
_direction	src/PinneRobot/SpeedRamping.h	/^	int _direction;$/;"	m	class:SpeedRamping	typeref:typename:int
_driver	src/PinneRobot/Motor.h	/^		MotorDriver* _driver;$/;"	m	class:PinneMotor	typeref:typename:MotorDriver *
_driver	src/PinneRobot/Motor.h	/^		MotorDriver* _driver;$/;"	m	class:RotationMotor	typeref:typename:MotorDriver *
_echoMessages	src/PinneRobot/PinneAPIParser.h	/^		boolean _echoMessages;$/;"	m	class:PinneAPIParser	typeref:typename:boolean
_encoderCounter	src/PinneRobot/Motor.h	/^		volatile int* _encoderCounter;$/;"	m	class:PinneMotor	typeref:typename:volatile int *
_encoderIncrement	src/PinneRobot/Motor.h	/^		volatile int* _encoderIncrement;$/;"	m	class:PinneMotor	typeref:typename:volatile int *
_encoderInterruptIndex	src/PinneRobot/Motor.h	/^		int _encoderInterruptIndex;$/;"	m	class:PinneMotor	typeref:typename:int
_endPosition	src/PinneRobot/SpeedRamping.h	/^	int _endPosition;$/;"	m	class:SpeedRamping	typeref:typename:int
_fallDelta	src/PinneRobot/SpeedRamping.h	/^	float _fallDelta;$/;"	m	class:SpeedRamping	typeref:typename:float
_getChecksum	src/PinneRobot/PinneAPIParser.cpp	/^boolean PinneAPIParser::_getChecksum()$/;"	f	class:PinneAPIParser	typeref:typename:boolean
_getDataBytes	src/PinneRobot/PinneAPIParser.cpp	/^boolean PinneAPIParser::_getDataBytes()$/;"	f	class:PinneAPIParser	typeref:typename:boolean
_halfwayPosition	src/PinneRobot/SpeedRamping.h	/^	int _halfwayPosition;$/;"	m	class:SpeedRamping	typeref:typename:int
_halfwayReached	src/PinneRobot/SpeedRamping.h	/^	boolean _halfwayReached;$/;"	m	class:SpeedRamping	typeref:typename:boolean
_lastCalcTime	src/PinneRobot/SpeedRamping.h	/^	unsigned long _lastCalcTime;$/;"	m	class:SpeedRamping	typeref:typename:unsigned long
_lastLeftPositionSent	src/PinneRobot/PinneRobot.h	/^	int _lastLeftPositionSent;$/;"	m	class:PinneRobot	typeref:typename:int
_lastPositionUpdate	src/PinneRobot/PinneRobot.h	/^	unsigned long _lastPositionUpdate;$/;"	m	class:PinneRobot	typeref:typename:unsigned long
_lastRightPositionSent	src/PinneRobot/PinneRobot.h	/^	int _lastRightPositionSent;$/;"	m	class:PinneRobot	typeref:typename:int
_lastSlackSensorReadTime	src/PinneRobot/Motor.h	/^		unsigned long _lastSlackSensorReadTime;$/;"	m	class:PinneMotor	typeref:typename:unsigned long
_lastSlackSensorReading	src/PinneRobot/Motor.h	/^		int _lastSlackSensorReading;$/;"	m	class:PinneMotor	typeref:typename:int
_lastTopSensorReadTime	src/PinneRobot/Motor.h	/^		unsigned long _lastTopSensorReadTime;$/;"	m	class:PinneMotor	typeref:typename:unsigned long
_lastTopSensorReading	src/PinneRobot/Motor.h	/^		int _lastTopSensorReading;$/;"	m	class:PinneMotor	typeref:typename:int
_maxPosition	src/PinneRobot/Motor.h	/^		position_t _maxPosition; \/\/i.e. max right position$/;"	m	class:RotationMotor	typeref:typename:position_t
_maxPosition	src/PinneRobot/Motor.h	/^		position_t _maxPosition;$/;"	m	class:PinneMotor	typeref:typename:position_t
_maxSpeed	src/PinneRobot/SpeedRamping.h	/^	float _maxSpeed;$/;"	m	class:SpeedRamping	typeref:typename:float
_minPosition	src/PinneRobot/Motor.h	/^		position_t _minPosition; \/\/i.e. max left position$/;"	m	class:RotationMotor	typeref:typename:position_t
_minPosition	src/PinneRobot/Motor.h	/^		position_t _minPosition;$/;"	m	class:PinneMotor	typeref:typename:position_t
_minSpeed	src/PinneRobot/SpeedRamping.h	/^	float _minSpeed;$/;"	m	class:SpeedRamping	typeref:typename:float
_parseCommand	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_parseCommand(byte inByte)$/;"	f	class:PinneAPIParser	typeref:typename:void
_parseDataValue	src/PinneRobot/PinneAPIParser.cpp	/^int PinneAPIParser::_parseDataValue()$/;"	f	class:PinneAPIParser	typeref:typename:int
_peakDuration	src/PinneRobot/SpeedRamping.h	/^	int _peakDuration;$/;"	m	class:SpeedRamping	typeref:typename:int
_processGetBrakeCommand	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processGetBrakeCommand()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processGetCurrentPositionCommand	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processGetCurrentPositionCommand()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processGetDirectionCommand	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processGetDirectionCommand()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processGetEchoMessages	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processGetEchoMessages()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processGetGoToSpeedRampDownCommand	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processGetGoToSpeedRampDownCommand()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processGetGoToSpeedRampUpCommand	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processGetGoToSpeedRampUpCommand()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processGetGoToSpeedScalingCommand	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processGetGoToSpeedScalingCommand()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processGetMaxPositionCommand	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processGetMaxPositionCommand()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processGetMinPositionCommand	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processGetMinPositionCommand()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processGetSpeedCommand	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processGetSpeedCommand()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processGetStateCommand	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processGetStateCommand()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processGetStopCommand	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processGetStopCommand()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processGetTargetPositionCommand	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processGetTargetPositionCommand()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processSetBrakeCommand	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processSetBrakeCommand()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processSetCurrentPositionCommand	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processSetCurrentPositionCommand()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processSetDirectionCommand	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processSetDirectionCommand()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processSetEchoMessages	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processSetEchoMessages()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processSetGoToSpeedRampDownCommand	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processSetGoToSpeedRampDownCommand()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processSetGoToSpeedRampUpCommand	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processSetGoToSpeedRampUpCommand()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processSetGoToSpeedScalingCommand	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processSetGoToSpeedScalingCommand()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processSetGoToTargetCommand	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processSetGoToTargetCommand()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processSetGotoParkingPosition	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processSetGotoParkingPosition()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processSetMaxPositionCommand	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processSetMaxPositionCommand()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processSetMinPositionCommand	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processSetMinPositionCommand()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processSetSpeedCommand	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processSetSpeedCommand()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processSetStopCommand	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processSetStopCommand()$/;"	f	class:PinneAPIParser	typeref:typename:void
_processSetTargetPositionCommand	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::_processSetTargetPositionCommand()$/;"	f	class:PinneAPIParser	typeref:typename:void
_rampDown	src/PinneRobot/SpeedRamping.h	/^	float _rampDown;$/;"	m	class:SpeedRamping	typeref:typename:float
_rampUp	src/PinneRobot/SpeedRamping.h	/^	float _rampUp;$/;"	m	class:SpeedRamping	typeref:typename:float
_riseDelta	src/PinneRobot/SpeedRamping.h	/^	float _riseDelta;$/;"	m	class:SpeedRamping	typeref:typename:float
_robot	src/PinneRobot/PinneAPIParser.h	/^		PinneRobot *_robot;$/;"	m	class:PinneAPIParser	typeref:typename:PinneRobot *
_rotationPotmeterPin	src/PinneRobot/Motor.h	/^		unsigned char _rotationPotmeterPin;$/;"	m	class:RotationMotor	typeref:typename:unsigned char
_slackStopSensorPin	src/PinneRobot/Motor.h	/^		int _slackStopSensorPin;$/;"	m	class:PinneMotor	typeref:typename:int
_slackStopSensorValue	src/PinneRobot/Motor.h	/^		int _slackStopSensorValue;$/;"	m	class:PinneMotor	typeref:typename:int
_speed	src/PinneRobot/MotorDriver.h	/^		speed_t _speed;$/;"	m	class:MotorDriver	typeref:typename:speed_t
_speedRamper	src/PinneRobot/Motor.h	/^		SpeedRamping* _speedRamper;$/;"	m	class:PinneMotor	typeref:typename:SpeedRamping *
_speedRamper	src/PinneRobot/Motor.h	/^		SpeedRamping* _speedRamper;$/;"	m	class:RotationMotor	typeref:typename:SpeedRamping *
_speedRange	src/PinneRobot/SpeedRamping.h	/^	int _speedRange;$/;"	m	class:SpeedRamping	typeref:typename:int
_speedScaling	src/PinneRobot/SpeedRamping.h	/^	float _speedScaling;$/;"	m	class:SpeedRamping	typeref:typename:float
_startPosition	src/PinneRobot/SpeedRamping.h	/^	int _startPosition;$/;"	m	class:SpeedRamping	typeref:typename:int
_state	src/PinneRobot/Motor.h	/^		int _state;$/;"	m	class:PinneMotor	typeref:typename:int
_state	src/PinneRobot/Motor.h	/^		int _state;$/;"	m	class:RotationMotor	typeref:typename:int
_stoppingSpeed	src/PinneRobot/Motor.h	/^		int _stoppingSpeed;$/;"	m	class:PinneMotor	typeref:typename:int
_stoppingSpeed	src/PinneRobot/Motor.h	/^		int _stoppingSpeed;$/;"	m	class:RotationMotor	typeref:typename:int
_targetPosition	src/PinneRobot/Motor.h	/^		position_t _targetPosition;$/;"	m	class:PinneMotor	typeref:typename:position_t
_targetPosition	src/PinneRobot/Motor.h	/^		position_t _targetPosition;$/;"	m	class:RotationMotor	typeref:typename:position_t
_topStopSensorPin	src/PinneRobot/Motor.h	/^		int _topStopSensorPin;$/;"	m	class:PinneMotor	typeref:typename:int
_topStopSensorValue	src/PinneRobot/Motor.h	/^		int _topStopSensorValue;$/;"	m	class:PinneMotor	typeref:typename:int
_verifyGetCommandChecksum	src/PinneRobot/PinneAPIParser.cpp	/^boolean PinneAPIParser::_verifyGetCommandChecksum(byte inByte)$/;"	f	class:PinneAPIParser	typeref:typename:boolean
_verifySetCommandChecksum	src/PinneRobot/PinneAPIParser.cpp	/^boolean PinneAPIParser::_verifySetCommandChecksum(byte inByte)$/;"	f	class:PinneAPIParser	typeref:typename:boolean
address_t	src/PinneRobot/PinneAPI.h	/^enum address_t {$/;"	g
build	ino.ini	/^[build]$/;"	s
byteType_t	src/PinneRobot/PinneAPI.h	/^enum byteType_t$/;"	g
cStandard	src/PinneRobot/.vscode/c_cpp_properties.json	/^            "cStandard": "c11",$/;"	s	object:configurations.0
cStandard	src/PinneRobot/.vscode/c_cpp_properties.json	/^            "cStandard": "c11",$/;"	s	object:configurations.1
command_t	src/PinneRobot/PinneAPI.h	/^enum command_t$/;"	g
compilerPath	src/PinneRobot/.vscode/c_cpp_properties.json	/^            "compilerPath": "C:\\\\Strawberry\\\\c\\\\bin\\\\gcc.exe",$/;"	s	object:configurations.0
compilerPath	src/PinneRobot/.vscode/c_cpp_properties.json	/^            "compilerPath": "C:\\\\Strawberry\\\\c\\\\bin\\\\gcc.exe",$/;"	s	object:configurations.1
configurations	src/PinneRobot/.vscode/c_cpp_properties.json	/^    "configurations": [$/;"	a
cppStandard	src/PinneRobot/.vscode/c_cpp_properties.json	/^            "cppStandard": "c++17",$/;"	s	object:configurations.0
cppStandard	src/PinneRobot/.vscode/c_cpp_properties.json	/^            "cppStandard": "c++17",$/;"	s	object:configurations.1
defines	src/PinneRobot/.vscode/c_cpp_properties.json	/^            "defines": [$/;"	a	object:configurations.0
defines	src/PinneRobot/.vscode/c_cpp_properties.json	/^            "defines": [$/;"	a	object:configurations.1
encoderCounter1	src/PinneRobot/PinneMotor.cpp	/^volatile int encoderCounter1 = 0;$/;"	v	typeref:typename:volatile int
encoderCounter2	src/PinneRobot/PinneMotor.cpp	/^volatile int encoderCounter2 = 0;$/;"	v	typeref:typename:volatile int
encoderISR1	src/PinneRobot/PinneMotor.cpp	/^void encoderISR1()$/;"	f	typeref:typename:void
encoderISR2	src/PinneRobot/PinneMotor.cpp	/^void encoderISR2()$/;"	f	typeref:typename:void
encoderIncrement1	src/PinneRobot/PinneMotor.cpp	/^volatile int encoderIncrement1 = 1;$/;"	v	typeref:typename:volatile int
encoderIncrement2	src/PinneRobot/PinneMotor.cpp	/^volatile int encoderIncrement2 = 1;$/;"	v	typeref:typename:volatile int
includePath	src/PinneRobot/.vscode/c_cpp_properties.json	/^            "includePath": [$/;"	a	object:configurations.0
includePath	src/PinneRobot/.vscode/c_cpp_properties.json	/^            "includePath": [$/;"	a	object:configurations.1
init	src/PinneRobot/L293Driver.cpp	/^void L293Driver::init()$/;"	f	class:L293Driver	typeref:typename:void
init	src/PinneRobot/PinneMotor.cpp	/^void PinneMotor::init()$/;"	f	class:PinneMotor	typeref:typename:void
init	src/PinneRobot/PinneRobot.cpp	/^void PinneRobot::init()$/;"	f	class:PinneRobot	typeref:typename:void
init	src/PinneRobot/RotationMotor.cpp	/^void RotationMotor::init()$/;"	f	class:RotationMotor	typeref:typename:void
init	src/PinneRobot/VNH5019Driver.cpp	/^void VNH5019Driver::init()$/;"	f	class:VNH5019Driver	typeref:typename:void
intelliSenseMode	src/PinneRobot/.vscode/c_cpp_properties.json	/^            "intelliSenseMode": "clang-x64"$/;"	s	object:configurations.0
intelliSenseMode	src/PinneRobot/.vscode/c_cpp_properties.json	/^            "intelliSenseMode": "clang-x64"$/;"	s	object:configurations.1
kRampTable	src/PinneRobot/kRISE_TABLE.h	/^static const float kRampTable[TABLE_SIZE] = {$/;"	v	typeref:typename:const float[]
leftDriverENDIAG	src/PinneRobot/PinneRobot.cpp	/^const int leftDriverENDIAG = 6;$/;"	v	typeref:typename:const int
leftDriverINA	src/PinneRobot/PinneRobot.cpp	/^const int leftDriverINA = 11;\/\/Remapped due to interrupt$/;"	v	typeref:typename:const int
leftDriverINB	src/PinneRobot/PinneRobot.cpp	/^const int leftDriverINB = 4;$/;"	v	typeref:typename:const int
leftDriverPWM	src/PinneRobot/PinneRobot.cpp	/^const int leftDriverPWM = 9;$/;"	v	typeref:typename:const int
leftMotor	src/PinneRobot/PinneRobot.h	/^	PinneMotor *leftMotor;$/;"	m	class:PinneRobot	typeref:typename:PinneMotor *
leftMotorEncoderInterruptIndex	src/PinneRobot/PinneRobot.cpp	/^const int leftMotorEncoderInterruptIndex = 1;\/\/ digital pin 3 on Leonardo implicitly$/;"	v	typeref:typename:const int
leftMotorSlackStopSensor	src/PinneRobot/PinneRobot.cpp	/^const int leftMotorSlackStopSensor = A5; \/\/todo: cut trace, was current sense pin$/;"	v	typeref:typename:const int
leftMotorTopStopSensor	src/PinneRobot/PinneRobot.cpp	/^const int leftMotorTopStopSensor = A0;$/;"	v	typeref:typename:const int
model	ino.ini	/^board-model = leonardo$/;"	k	section:build
model	ino.ini	/^board-model = leonardo$/;"	k	section:upload
name	src/PinneRobot/.vscode/c_cpp_properties.json	/^            "name": "Arduino",$/;"	s	object:configurations.1
name	src/PinneRobot/.vscode/c_cpp_properties.json	/^            "name": "Win32",$/;"	s	object:configurations.0
parseIncomingByte	src/PinneRobot/PinneAPIParser.cpp	/^void PinneAPIParser::parseIncomingByte(byte inByte)$/;"	f	class:PinneAPIParser	typeref:typename:void
parseMask_t	src/PinneRobot/PinneAPI.h	/^enum parseMask_t {$/;"	g
port	ino.ini	/^serial-port = \/dev\/tty.usbmodem411$/;"	k	section:serial
port	ino.ini	/^serial-port = \/dev\/tty.usbmodem411$/;"	k	section:upload
position_t	src/PinneRobot/Motor.h	/^typedef int position_t;$/;"	t	typeref:typename:int
rightDriverENDIAG	src/PinneRobot/PinneRobot.cpp	/^const int rightDriverENDIAG = 12;$/;"	v	typeref:typename:const int
rightDriverINA	src/PinneRobot/PinneRobot.cpp	/^const int rightDriverINA = 7;$/;"	v	typeref:typename:const int
rightDriverINB	src/PinneRobot/PinneRobot.cpp	/^const int rightDriverINB = 8;$/;"	v	typeref:typename:const int
rightDriverPWM	src/PinneRobot/PinneRobot.cpp	/^const int rightDriverPWM = 10;$/;"	v	typeref:typename:const int
rightMotor	src/PinneRobot/PinneRobot.h	/^	PinneMotor *rightMotor;$/;"	m	class:PinneRobot	typeref:typename:PinneMotor *
rightMotorEncoderInterruptIndex	src/PinneRobot/PinneRobot.cpp	/^const int rightMotorEncoderInterruptIndex = 0;\/\/ digital pin 2 on Leonardo implicitly$/;"	v	typeref:typename:const int
rightMotorSlackStopSensor	src/PinneRobot/PinneRobot.cpp	/^const int rightMotorSlackStopSensor = 13;\/\/todo cut trace, was current sense pin$/;"	v	typeref:typename:const int
rightMotorTopStopSensor	src/PinneRobot/PinneRobot.cpp	/^const int rightMotorTopStopSensor = A1;$/;"	v	typeref:typename:const int
rotationDriver1A	src/PinneRobot/PinneRobot.cpp	/^const int rotationDriver1A = A3;$/;"	v	typeref:typename:const int
rotationDriver2A	src/PinneRobot/PinneRobot.cpp	/^const int rotationDriver2A = A2;$/;"	v	typeref:typename:const int
rotationDriverPWM	src/PinneRobot/PinneRobot.cpp	/^const int rotationDriverPWM = 5;$/;"	v	typeref:typename:const int
rotationMotor	src/PinneRobot/PinneRobot.h	/^	RotationMotor *rotationMotor;$/;"	m	class:PinneRobot	typeref:typename:RotationMotor *
rotationPotmeterPin	src/PinneRobot/PinneRobot.cpp	/^const int rotationPotmeterPin = A4;$/;"	v	typeref:typename:const int
serial	ino.ini	/^[serial]$/;"	s
setGet_t	src/PinneRobot/PinneAPI.h	/^enum setGet_t$/;"	g
slackSensorDebounceDelay	src/PinneRobot/PinneMotor.cpp	/^const unsigned long slackSensorDebounceDelay = 350;$/;"	v	typeref:typename:const unsigned long
speed_t	src/PinneRobot/MotorDriver.h	/^typedef int speed_t;$/;"	t	typeref:typename:int
stateChange_t	src/PinneRobot/PinneAPI.h	/^enum stateChange_t$/;"	g
topSensorDebounceDelay	src/PinneRobot/PinneMotor.cpp	/^const unsigned long topSensorDebounceDelay = 50;$/;"	v	typeref:typename:const unsigned long
update	src/PinneRobot/PinneRobot.cpp	/^void PinneRobot::update()$/;"	f	class:PinneRobot	typeref:typename:void
upload	ino.ini	/^[upload]$/;"	s
version	src/PinneRobot/.vscode/c_cpp_properties.json	/^    "version": 4$/;"	n
~PinneMotor	src/PinneRobot/Motor.h	/^		~PinneMotor() {};$/;"	f	class:PinneMotor
